{"version":3,"sources":["apolloClient.js","queries.js","Movie.js","Home.js","Detail.js","App.js","globalStyles.js","index.js"],"names":["client","ApolloClient","uri","HOME_PAGE","gql","MOVIE_DETAILS","Card","styled","div","props","background","Title","span","Movie","id","title","rating","poster","to","Container","Home","useQuery","loading","data","error","Helmet","movies","map","movie","key","medium_cover_image","Image","withComponent","h1","Paragraph","bold","MovieContainer","withRouter","movieId","match","params","variables","parseInt","Fragment","src","description_intro","suggestions","App","exact","path","component","Detail","Component","createGlobalStyle","reset","ReactDOM","render","document","getElementById"],"mappings":"+QAMeA,EAJA,I,MAAIC,GAAa,CAC5BC,IAAK,2B,4lBCDF,IAAMC,EAAYC,IAAH,KAYTC,EAAgBD,IAAH,K,osBCT1B,IAAME,EAAOC,UAAOC,IAAV,KAGY,SAAAC,GAAK,oBAAWA,EAAMC,WAAjB,QASrBC,EAAQJ,UAAOK,KAAV,KAgCIC,EAjBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OAAtB,OACZ,kBAAC,IAAD,CAAMC,GAAE,mBAAcJ,IACpB,kBAACR,EAAD,CAAMI,WAAYO,GAChB,kBAACN,EAAD,KACGI,EADH,gBACaC,M,mLC7BnB,IAAMG,EAAYZ,UAAOC,IAAV,KAgCAY,EAzBF,WAAO,IAAD,EACgBC,YAASlB,GAAlCmB,EADS,EACTA,QAASC,EADA,EACAA,KAAMC,EADN,EACMA,MACvB,OACE,kBAACL,EAAD,KACE,kBAACM,EAAA,OAAD,KACE,kDAEDH,GAAW,UACXE,GAAS,UACRF,GACAC,GACAA,EAAKG,QACLH,EAAKG,OAAOC,KAAI,SAAAC,GAAK,OACnB,kBAAC,EAAD,CACEd,GAAIc,EAAMd,GACVe,IAAKD,EAAMd,GACXG,OAAQW,EAAME,mBACdf,MAAOa,EAAMb,MACbC,OAAQY,EAAMZ,c,+xBCxB1B,IAAMG,EAAYZ,UAAOC,IAAV,KAYTuB,EANOxB,UAAOC,IAAV,KAMSwB,cAAc,OAE3BrB,EAAQJ,UAAO0B,GAAV,KAKLC,EAAY3B,UAAOK,KAAV,KAGE,SAAAH,GAAK,OAAKA,EAAM0B,KAAO,MAAQ,SAG1CC,EAAiB7B,UAAOC,IAAV,KAsDL6B,eA9CA,SAAC,GAIT,IAFOC,EAER,EAHJC,MACEC,OAAUF,QAER,EAC6BjB,YAAShB,EAAe,CACvDoC,UAAW,CAAEH,QAASI,SAASJ,MADzBhB,EADJ,EACIA,QAASE,EADb,EACaA,MAAOD,EADpB,EACoBA,KAGxB,OAAID,EAEA,kBAAC,IAAMqB,SAAP,KACE,kBAAClB,EAAA,OAAD,KACE,qDAFJ,WAOAD,EAAc,QAEhB,kBAAC,IAAMmB,SAAP,KACE,kBAAC,EAAD,KACE,kBAAClB,EAAA,OAAD,KACE,+BAAQF,EAAKK,MAAMb,MAAnB,eAEF,kBAACgB,EAAD,CAAOa,IAAKrB,EAAKK,MAAME,qBACvB,8BACE,kBAAC,EAAD,KAAQP,EAAKK,MAAMb,OACnB,kBAACmB,EAAD,CAAWC,MAAI,GAAf,WAAyBZ,EAAKK,MAAMZ,QACpC,kBAACkB,EAAD,KAAYX,EAAKK,MAAMiB,qBAG3B,kBAAC,EAAD,kBACA,kBAACT,EAAD,KACGb,EAAKuB,YAAYnB,KAAI,SAAAC,GAAK,OACzB,kBAAC,EAAD,CACEC,IAAKD,EAAMd,GACXA,GAAIc,EAAMd,GACVC,MAAOa,EAAMb,MACbC,OAAQY,EAAMZ,OACdC,OAAQW,EAAME,6BCvDXiB,E,iLAfX,OACE,kBAAC,IAAD,CAAgB/C,OAAQA,GACtB,kBAAC,IAAD,CAAqBA,OAAQA,GAC3B,kBAAC,IAAD,KACE,8BACE,kBAAC,IAAD,CAAOgD,OAAO,EAAMC,KAAM,IAAKC,UAAW9B,IAC1C,kBAAC,IAAD,CAAO6B,KAAM,oBAAqBC,UAAWC,Y,GARzCC,a,gXCNlBC,4BAAiB,IAEbC,KCCJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.48584fd5.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\";\r\n\r\nconst client = new ApolloClient({\r\n    uri: \"http://localhost:4000/\"\r\n})\r\n\r\nexport default client;","import gql from \"graphql-tag\";\r\n\r\nexport const HOME_PAGE = gql`\r\n  {\r\n    movies(limit: 50, rating: 7) {\r\n      id\r\n      title\r\n      genres\r\n      rating\r\n      medium_cover_image\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MOVIE_DETAILS = gql`\r\n  query getMovieDetails($movieId: Int!) {\r\n    movie(id: $movieId) {\r\n      medium_cover_image\r\n      title\r\n      rating\r\n      description_intro\r\n      language\r\n      genres\r\n    }\r\n    suggestions(id: $movieId) {\r\n      id\r\n      title\r\n      rating\r\n      medium_cover_image\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Card = styled.div`\r\n  border-radius: 15px;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n  background-image: ${props => `url(${props.background})`};\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 300px;\r\n  width: 200px;\r\n  margin-bottom: 40px;\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  background-color: white;\r\n  width: auto;\r\n  padding: 10px;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n  position: absolute;\r\n  bottom: 25px;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  color: black;\r\n  font-weight: 100;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst Movie = ({ id, title, rating, poster }) => (\r\n  <Link to={`/details/${id}`}>\r\n    <Card background={poster}>\r\n      <Title>\r\n        {title} ⭐️{rating}\r\n      </Title>\r\n    </Card>\r\n  </Link>\r\n);\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  poster: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { HOME_PAGE } from \"./queries\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport Movie from \"./Movie\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 0.7fr);\r\n  flex-wrap: wrap;\r\n  justify-items: center;\r\n`;\r\n\r\nconst Home = () => {\r\n  const { loading, data, error } = useQuery(HOME_PAGE);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Home | MovieQL</title>\r\n      </Helmet>\r\n      {loading && \"Loading\"}\r\n      {error && \"ERROR!\"}\r\n      {!loading &&\r\n        data &&\r\n        data.movies &&\r\n        data.movies.map(movie => (\r\n          <Movie\r\n            id={movie.id}\r\n            key={movie.id}\r\n            poster={movie.medium_cover_image}\r\n            title={movie.title}\r\n            rating={movie.rating}\r\n          />\r\n        ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport { MOVIE_DETAILS } from \"./queries\";\r\nimport { withRouter } from 'react-router';\r\nimport Movie from \"./Movie\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 4fr;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n  background-color: white;\r\n  border-radius: 7px;\r\n`;\r\n\r\nconst Image = Card.withComponent(\"img\");\r\n\r\nconst Title = styled.h1`\r\n  font-size: 24px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Paragraph = styled.span`\r\n  margin-bottom: 10px;\r\n  display: block;\r\n  font-weight: ${props => (props.bold ? \"500\" : \"400\")};\r\n`;\r\n\r\nconst MovieContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 0.7fr);\r\n  flex-wrap: wrap;\r\n  justify-items: center;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst Detail = ({\r\n  match: {\r\n    params: { movieId }\r\n  }\r\n}) => {\r\n  const { loading, error, data } = useQuery(MOVIE_DETAILS, {\r\n    variables: { movieId: parseInt(movieId) }\r\n  });\r\n  if (loading)\r\n    return (\r\n      <React.Fragment>\r\n        <Helmet>\r\n          <title>Loading | MovieQL</title>\r\n        </Helmet>\r\n        loading\r\n      </React.Fragment>\r\n    );\r\n  if (error) return \"error\";\r\n  return (\r\n    <React.Fragment>\r\n      <Container>\r\n        <Helmet>\r\n          <title>{data.movie.title} | MovieQL</title>\r\n        </Helmet>\r\n        <Image src={data.movie.medium_cover_image} />\r\n        <span>\r\n          <Title>{data.movie.title}</Title>\r\n          <Paragraph bold>Rating: {data.movie.rating}</Paragraph>\r\n          <Paragraph>{data.movie.description_intro}</Paragraph>\r\n        </span>\r\n      </Container>\r\n      <Title>Suggested</Title>\r\n      <MovieContainer>\r\n        {data.suggestions.map(movie => (\r\n          <Movie\r\n            key={movie.id}\r\n            id={movie.id}\r\n            title={movie.title}\r\n            rating={movie.rating}\r\n            poster={movie.medium_cover_image}\r\n          />\r\n        ))}\r\n      </MovieContainer>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default withRouter(Detail);\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider as ApolloHooksProvider } from \"react-apollo-hooks\";\nimport client from \"./apolloClient\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <ApolloHooksProvider client={client}>\n          <Router>\n            <main>\n              <Route exact={true} path={\"/\"} component={Home} />\n              <Route path={\"/details/:movieId\"} component={Detail} />\n            </main>\n          </Router>\n        </ApolloHooksProvider>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\ncreateGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Maven+Pro:400,500');\r\n  ${reset};\r\n  body{\r\n    font-family: 'Maven Pro', sans-serif;\r\n    background-color: #ecf0f1;\r\n  }\r\n  a{\r\n      color:inherit;\r\n  }\r\n  main {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n  }\r\n`;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./globalStyles\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}